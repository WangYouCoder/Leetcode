class Solution {
public:
    int m, n;
    bool vis[51][51];
    int count;
    int maxAreaOfIsland(vector<vector<int>>& grid) 
    {
        int ret = 0;
        m = grid.size(), n = grid[0].size();
        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
            {
                if(grid[i][j] == 1 && !vis[i][j])
                {
                    count = 0;
                    dfs(grid, i, j);
                    ret = max(count, ret);
                }
            }

        return ret;
    }

    int dx[4] = {0,0,1,-1};
    int dy[4] = {1,-1,0,0};
    void dfs(vector<vector<int>>& grid, int i, int j)
    {
        vis[i][j] = true;
        count++;
        for(int k = 0; k < 4; k++)
        {
            int x = i + dx[k], y = j + dy[k];
            if(x >= 0 && x < m && y >= 0 && y < n && !vis[x][y] && grid[x][y] == 1)
            {
                dfs(grid, x, y);
            }
        }
    }
};
