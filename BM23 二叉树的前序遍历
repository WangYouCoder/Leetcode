/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 *	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param root TreeNode类 
     * @return int整型vector
     */
    void Prev(TreeNode* root, vector<int> &ret)
    {
        if(root == nullptr) return;
        ret.push_back(root->val);
        Prev(root->left, ret);
        Prev(root->right, ret);
    }

    vector<int> preorderTraversal(TreeNode* root) 
    {
        // vector<int> ret;
        // Prev(root, ret);
        // return ret;

        stack<TreeNode*> st;
        vector<int> ret;
        TreeNode *cur = root;
        while(cur != nullptr || !st.empty())
        {
            while(cur)
            {
                st.push(cur);
                ret.push_back(cur->val);
                cur = cur->left;
            }
            TreeNode *node = st.top();
            st.pop();
            cur = node->right;
        }
        return ret;
    }
};
