class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 返回表达式的值
     * @param s string字符串 待计算的表达式
     * @return int整型
     */
    int solve(string s) 
    {
        stack<int> st;
        int val = 0;
        char sign = '+';
        for(int i = 0; i < s.size(); i++)
        {
            if(s[i] >= '0' && s[i] <= '9')
            {
                val = val * 10 + (s[i] - '0');
            }
            if(s[i] == '(')
            {
                int left = i++, count = 1;
                while(count > 0)
                {
                    if(s[i] == ')') count--;
                    else if(s[i] == '(') count++;
                    i++;
                }
                val =  solve(s.substr(left + 1, i - 1 - (left + 1)));
                i--;
            }

            if(i == s.size() - 1 || s[i] == '+' || s[i] == '-' || s[i] == '*')
            {
                if(sign == '+') st.push(val);
                else if(sign == '-') st.push(-val);
                else if(sign == '*') st.top() *= val;
                sign = s[i];
                val = 0;
            }
        }
        int res = 0;
        while(!st.empty())
        {
            res += st.top();
            st.pop();
        }
        return res;
    }
};
