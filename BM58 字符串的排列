class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param str string字符串 
     * @return string字符串vector
     */
    
    unordered_set<string> res;
    string path;
    bool vis[10];
    void dfs(const string &str)
    {
        if(path.size() == str.size())
        {
            res.insert(path);
            return;
        }
        for(int i = 0; i < str.size(); i++)
        {
            if(vis[i] == true) continue;
            path.push_back(str[i]);
            vis[i] = true;
            dfs(str);
            vis[i] = false;
            path.pop_back();
        }
    }

    vector<string> Permutation(string str) 
    {
        memset(vis, 0, sizeof vis);
        dfs(str);
        vector<string> ret(res.begin(), res.end());
       return ret;
    }
};
