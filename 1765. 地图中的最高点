class Solution {
public:
    int m,n;
    int dx[4] = {0,0,1,-1};
    int dy[4] = {1,-1,0,0};
    bool vis[1001][1001] = {0};
    vector<vector<int>> highestPeak(vector<vector<int>>& isWater) 
    {
        m = isWater.size(), n = isWater[0].size();
        vector<vector<int>> dist(m, vector<int>(n));
        queue<pair<int,int>> q;
        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                if(isWater[i][j] == 1) q.push({i,j}),vis[i][j] = true;
        
        while(q.size())
        {
            int sz = q.size();
            while(sz--)
            {
                auto [a,b] = q.front();q.pop();
                for(int i = 0; i < 4; i++)
                {
                    int x = a + dx[i], y = b + dy[i];
                    if(x >= 0 && x < m && y >= 0 && y < n && !vis[x][y])
                    {
                        dist[x][y] = dist[a][b] + 1;
                        q.push({x,y});
                        vis[x][y] = true;
                    }
                }
            }
        }

        return dist;
    }
};
