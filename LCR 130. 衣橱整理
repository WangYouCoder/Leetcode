class Solution {
public:
    int m, n, num, count;
    bool vis[101][101];
    int wardrobeFinishing(int _m, int _n, int cnt) 
    {
        count = 0;
        m = _m, n = _n, num = cnt;
        dfs(0, 0);

        return count;
    }

    int dx[2] = {0,1};
    int dy[2] = {1,0};
    void dfs(int i, int j)
    {
        vis[i][j] = true;
        count++;
        for(int k = 0; k < 2; k++)
        {
            int x = i + dx[k], y = j + dy[k];
            if(x >= 0 && x < m && y >= 0 && y < n && !vis[x][y] && check(x,y))
            {
                dfs(x, y);
            }
        }
    }

    bool check(int x, int y)
    {
        int tmp = 0;
        while(x)
        {
            tmp += x % 10;
            x /= 10;
        }
        while(y)
        {
            tmp += y % 10;
            y /= 10;
        }

        return tmp <= num;
    }
};
