/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) 
    {
        if(head == nullptr || head->next == nullptr) return head;

        ListNode *prev = nullptr, *cur = head, *next = head->next, *newhead = cur->next;

        while(cur && next)
        {
            // 进行节点交换
            cur->next = next->next;
            next->next = cur;
            
            // 用于进行后续交换节点与前面的节点进行连接
            if(prev)
                prev->next = next;

            // 更新每一次的prev
            prev = cur;

            // 迭代到下一个需要交换的节点
            cur = cur->next;
            if(cur)
                next = cur->next;
        }
        
        return newhead;
    }
};
