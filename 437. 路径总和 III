/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long solve(TreeNode* root, long long targetSum)
    {
        if(root == nullptr) return 0;

        long long ret = 0;
        if(root->val == targetSum) ret++;
        // else if(root->val > targetSum) return 0;  可能出现负数，因此无法使用这个方式进行剪枝

        ret += solve(root->left, targetSum - root->val);
        ret += solve(root->right, targetSum - root->val);

        return ret;
    }

    int pathSum(TreeNode* root, long long targetSum) 
    {
        if(root == nullptr) return 0;

        long long ret = solve(root, targetSum);
        ret += pathSum(root->left, targetSum);
        ret += pathSum(root->right, targetSum);
    
        return ret;
    }
};
