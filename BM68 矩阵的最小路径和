class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param matrix int整型vector<vector<>> the matrix
     * @return int整型
     */
    int minPathSum(vector<vector<int>>& matrix) 
    {
        int n = matrix.size(), m = matrix[0].size();
        vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));
        for(int i = 0; i <= m; i++)
            dp[0][i] = 0x3f3f3f3f;
        for(int i = 0; i <= n; i++)
            dp[i][0] = 0x3f3f3f3f;

        dp[1][0] = 0;
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= m; j++)
            {
                dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + matrix[i-1][j-1];
                // if(j == m)
                //     cout << dp[i][j] << " " << dp[i-1][j] << " " << dp[i][j-1] << " " << matrix[i-1][j-1] << endl;
            }
        
        return dp[n][m];
    }
};
