class Solution {
public:
    int findMaxLength(vector<int>& nums) 
    {
        unordered_map<int,int> hash;
        for(auto& x : nums)
        {
            if(x == 0) x = -1;
        }

        vector<int> dp(nums.size() + 1);

        
        //   统计次数   不必理会
        // int sum = 0, ret = 0;
        // for(auto x : nums)
        // {
        //     sum += x;
        //     if(hash.count(sum - 0)) ret += hash[sum - 0];

        //     hash[x]++;
        // }
        
        //失败过程  不必理会
        // for(int i = 1; i <= nums.size(); i++)
        // {    
        //     hash[dp[i]]++;
        // }


        int len = 0;
        hash[0] = -1;
        int sum = 0;
        dp[0] = nums[0];
        
        for(int i = 0; i < nums.size(); i++)
        //for(int i = 0; i < nums.size(); i++)
        {
            if(i - 1 >= 0)
                dp[i] = dp[i - 1] + nums[i];
            //sum += nums[i];

            if(hash.count(dp[i])) len = max(len, i - hash[dp[i]]);
            else hash[dp[i]] = i;

            // if(hash.count(sum)) len = max(len, i - hash[sum]);
            // else hash[sum] = i;
        }
        return len;
    }
};
