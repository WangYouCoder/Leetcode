class Solution {
public:
    int m,n;
    int dx[4] = {1, -1, 0, 0};
    int dy[4] = {0, 0, 1, -1};
    void solve(vector<vector<char>>& board) 
    {
        m = board.size(), n = board[0].size();

        for(int j = 0; j < n; j++)
        {
            if(board[0][j] == 'O') dfs(board,0,j);
            if(board[m-1][j] == 'O') dfs(board,m-1,j);
        }
        for(int i = 0; i < m; i++)
        {
            if(board[i][0] == 'O') dfs(board,i,0);
            if(board[i][n-1] == 'O') dfs(board,i,n-1);
        }
        
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(board[i][j] == 'O') 
                {
                    board[i][j] = 'X';
                }
                else if(board[i][j] == '.') 
                {
                    board[i][j] = 'O';
                }
            }
        }     
    }

    void dfs(vector<vector<char>>& board, int i, int j)
    {
       board[i][j] = '.';
       for(int k = 0; k < 4; k++)
       {
            int x = dx[k] + i, y = dy[k] + j;
            if(x >= 0 && x < m && y >= 0 && y < n && board[x][y] == 'O')
            {
                dfs(board, x, y);
            }
       }
    }
};




