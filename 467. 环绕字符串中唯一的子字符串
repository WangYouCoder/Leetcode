class Solution {
public:
    int findSubstringInWraproundString(string s) 
    {
        int n = s.size();
        vector<int> dp(n,1);
        //填表
        for(int i = 1; i < n; i++)
        {
            if(s[i]-1 == s[i-1] || (s[i] == 'a' && s[i-1] == 'z'))
            {
                dp[i] += dp[i-1];
            }
        }

        int hash[26] = {0};
        for(int i = 0; i < n; i++)
            hash[s[i] - 'a'] = max(hash[s[i] - 'a'], dp[i]);

        int sum = 0;
        for(auto x : hash) sum += x;

        return sum;
    }
};
