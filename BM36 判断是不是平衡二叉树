/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 *	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param pRoot TreeNode类 
     * @return bool布尔型
     */
    int solve(TreeNode *root)
    {
        if(root == nullptr) return 0;
        int left = solve(root->left);
        int right = solve(root->right);

        return left > right ? left + 1 : right + 1;
    }

    bool solve1(TreeNode *root)
    {
        if(root == nullptr) return true;
        int l = solve(root->left);
        int r = solve(root->right);
        bool left = solve1(root->left);
        bool right = solve1(root->right);

        return (abs(l - r) <= 1 ? true : false) && left && right;
    }

    bool IsBalanced_Solution(TreeNode* pRoot) 
    {
        if(pRoot == nullptr) return true;
        return solve1(pRoot);
    }
};
