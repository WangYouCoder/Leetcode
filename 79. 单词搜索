class Solution {
public:
    int dx[4] = {0,0,1,-1};
    int dy[4] = {1,-1,0,0};
    int m,n;
    bool vis[7][7];
    bool exist(vector<vector<char>>& board, string word) 
    {
        m = board.size(), n = board[0].size();
        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                if(board[i][j] == word[0])
                {
                    vis[i][j] = true;
                    if(dfs(board, word, 1, i, j)) return true;
                    vis[i][j] = false;
                }

        return false;
    }

    bool dfs(vector<vector<char>>& board, string word, int pos, int i, int j)
    {
        if(pos == word.size()) return true;
        for(int k = 0; k < 4; k++)
        {
            int x = dx[k] + i, y = dy[k] + j;
            if(x >= 0 && x < m && y >= 0 && y < n && !vis[x][y] && board[x][y] == word[pos])
            {
                vis[x][y] = true;
                if(dfs(board,word,pos+1,x,y)) return true;
                vis[x][y] = false;
            }
        }

        return false;
    }
};
