/**
 * struct Interval {
 *	int start;
 *	int end;
 *	Interval(int s, int e) : start(start), end(e) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param intervals Interval类vector 
     * @return Interval类vector
     */

    vector<Interval> merge(vector<Interval>& intervals) 
    {
        vector<Interval> res;
        if(intervals.size() == 0) return res;
        sort(intervals.begin(), intervals.end(), 
            [](Interval& v1, Interval& v2){ return v1.start < v2.start; });
        
        res.push_back(intervals[0]);
        for(int i = 1; i < intervals.size(); i++)
        {
            if(res.back().end >= intervals[i].start)
                res.back().end = max(intervals[i].end, res.back().end);
            else
                res.push_back(intervals[i]);
        }
        return res;
    }
};
