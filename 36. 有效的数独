class Solution {
public:
    bool row[9][10], col[9][10], check[3][3][10];

    bool isValidSudoku(vector<vector<char>>& board) 
    {
        return dfs(board);
    }

    bool dfs(vector<vector<char>>& board)
    {
        for(int i = 0; i < 9; i++)
            for(int j = 0; j < 9; j++)
            {
                if(board[i][j] != '.')
                {
                    int num = board[i][j] - '0';
                    if(!row[i][num] && !col[j][num] && !check[i/3][j/3][num])
                    {
                        row[i][num] = col[j][num] = check[i/3][j/3][num] = true;
                    }
                    else
                    {
                        return false;
                    }
                }
            }
        
        return true;
    }
};
